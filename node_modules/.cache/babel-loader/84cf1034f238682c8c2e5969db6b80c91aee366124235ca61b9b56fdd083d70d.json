{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/GaneshSurna/Desktop/PRACTICE/routes-and-authentication/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/GaneshSurna/Desktop/PRACTICE/routes-and-authentication/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\GaneshSurna\\\\Desktop\\\\PRACTICE\\\\routes-and-authentication\\\\src\\\\components\\\\Events\\\\Events.js\",\n  _loader;\nimport { json } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Events() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = Events;\nexport function loader() {\n  return (_loader = _loader || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"http://localhost:8080/events\");\n        case 2:\n          response = _context.sent;\n          if (response.ok) {\n            _context.next = 5;\n            break;\n          }\n          throw json({\n            message: \"Failed to fetch events.\"\n          }, {\n            status: 500\n          });\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }))).apply(this, arguments);\n}\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["json","jsxDEV","_jsxDEV","Fragment","_Fragment","Events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_loader","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","fetch","sent","ok","message","status","stop","apply","arguments","$RefreshReg$"],"sources":["C:/Users/GaneshSurna/Desktop/PRACTICE/routes-and-authentication/src/components/Events/Events.js"],"sourcesContent":["import { json } from \"react-router-dom\";\r\n\r\nexport default function Events(){\r\n    return <>\r\n        <h1>All Events</h1>\r\n    </>\r\n}\r\n\r\nexport async function loader(){\r\n    const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n    if(!response.ok){\r\n        throw json({message:\"Failed to fetch events.\"},{status:500});\r\n    }\r\n}"],"mappings":";;;;AAAA,SAASA,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,eAAe,SAASC,MAAMA,CAAA,EAAE;EAC5B,oBAAOH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACHJ,OAAA;MAAAI,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC,gBACrB,CAAC;AACP;AAACC,EAAA,GAJuBN,MAAM;AAM9B,gBAAsBO,MAAMA,CAAA;EAAA,QAAAC,OAAA,GAAAA,OAAA,IAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAArB,SAAAC,QAAA;IAAA,IAAAC,QAAA;IAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OACoBC,KAAK,CAAC,8BAA8B,CAAC;QAAA;UAAtDN,QAAQ,GAAAG,QAAA,CAAAI,IAAA;UAAA,IAEVP,QAAQ,CAACQ,EAAE;YAAAL,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACLvB,IAAI,CAAC;YAAC2B,OAAO,EAAC;UAAyB,CAAC,EAAC;YAACC,MAAM,EAAC;UAAG,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAP,QAAA,CAAAQ,IAAA;MAAA;IAAA,GAAAZ,OAAA;EAAA,CAEnE,IAAAa,KAAA,OAAAC,SAAA;AAAA;AAAA,IAAApB,EAAA;AAAAqB,YAAA,CAAArB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}